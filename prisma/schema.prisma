// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the data model using Prisma schema

// Admins table
model Admin {
  id       Int      @id @default(autoincrement())
  fullName String
  email    String   @unique
  password String
  isAdmin  Boolean  @default(false)
}


// Vendors table
model Vendor {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String   @unique
  password   String
  address    String
  phoneNumber String
  state       String
  country     String
  coverImages String[]
  isVendor    Boolean  @default(false)
  // Define a one-to-many relationship between Vendor and Product
  products    Product[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Products table
model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  category    String[]
  price       Float
  image       String[]
  quantity    Int
  rating      Float
  reviews     String[]
  // Define a many-to-one relationship between Product and Vendor
  vendor      Vendor   @relation(fields: [vendorId], references: [id])
  vendorId    Int
  sold       Boolean  @default(false)
  payment     Payment[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Customers table
model Customer {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  phoneNumber String
  address    String
  payment     Payment[]
}

// Define additional relationships or tables for orders and order items as needed


// Payment

model Payment {
  id          Int      @id @default(autoincrement())
  amount      Float
  status      String
  customer    Customer @relation(fields: [customerId], references: [id])
  customerId  Int
  product     Product @relation(fields: [productId], references: [id])
  productId   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
